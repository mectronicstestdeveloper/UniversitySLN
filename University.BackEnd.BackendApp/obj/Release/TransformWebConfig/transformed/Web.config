<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  https://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <system.web>
    <compilation targetFramework="4.7" />
    <httpRuntime targetFramework="4.7" />
  </system.web>
  <connectionStrings>
    <add name="ProdDB" connectionString="Data Source=sql-server-dev-university.database.windows.net;Initial Catalog=UniversityDB;Integrated Security=False;User ID=ServerAdmin;Password=Jt?Rn(0-w$J9;Connection Timeout=360;Encrypt=True;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False" providerName="System.Data.SqlClient " />
  </connectionStrings>
  <system.serviceModel>
    <services>
      <service name="University.BackEnd.Services.Services.CityServices" behaviorConfiguration="BusinessService">
        <endpoint address="" name="CityEndPoint" binding="basicHttpBinding" bindingConfiguration="webHttpsConfig" contract="University.BackEnd.Services.Contracts.ICity" />
      </service>
      <service name="University.BackEnd.Services.Services.CountryServices" behaviorConfiguration="BusinessService">
        <endpoint address="" name="CountryEndPoint" binding="basicHttpBinding" bindingConfiguration="webHttpsConfig" contract="University.BackEnd.Services.Contracts.ICountry" />
      </service>
      <service name="University.BackEnd.Services.Services.GeographicalStateServices" behaviorConfiguration="BusinessService">
        <endpoint address="" name="GeographicalStateEndPoint" binding="basicHttpBinding" bindingConfiguration="webHttpsConfig" contract="University.BackEnd.Services.Contracts.IGeographicalState" />
      </service>
      <service name="University.BackEnd.Services.Services.PersonServices" behaviorConfiguration="BusinessService">
        <endpoint address="" name="PersonEndPoint" binding="basicHttpBinding" bindingConfiguration="webHttpsConfig" contract="University.BackEnd.Services.Contracts.IPerson" />
      </service>
      <service name="University.BackEnd.Services.Services.PersonTypeServices" behaviorConfiguration="BusinessService">
        <endpoint address="" name="PersonTypeEndPoint" binding="basicHttpBinding" bindingConfiguration="webHttpsConfig" contract="University.BackEnd.Services.Contracts.IPersonType" />
      </service>
      <service name="University.BackEnd.Services.Services.ProgramServices" behaviorConfiguration="BusinessService">
        <endpoint address="" name="ProgramEndPoint" binding="basicHttpBinding" bindingConfiguration="webHttpsConfig" contract="University.BackEnd.Services.Contracts.IProgram" />
      </service>
      <service name="University.BackEnd.Services.Services.ProgramSubjectServices" behaviorConfiguration="BusinessService">
        <endpoint address="" name="ProgramSubjectEndPoint" binding="basicHttpBinding" bindingConfiguration="webHttpsConfig" contract="University.BackEnd.Services.Contracts.IProgramSubject" />
      </service>
      <service name="University.BackEnd.Services.Services.ProgramSubjectPersonServices" behaviorConfiguration="BusinessService">
        <endpoint address="" name="ProgramSubjectPersonEndPoint" binding="basicHttpBinding" bindingConfiguration="webHttpsConfig" contract="University.BackEnd.Services.Contracts.IProgramSubjectPerson" />
      </service>
      <service name="University.BackEnd.Services.Services.RoomServices" behaviorConfiguration="BusinessService">
        <endpoint address="" name="RoomEndPoint" binding="basicHttpBinding" bindingConfiguration="webHttpsConfig" contract="University.BackEnd.Services.Contracts.IRoom" />
      </service>
      <service name="University.BackEnd.Services.Services.RoomSubjectServices" behaviorConfiguration="BusinessService">
        <endpoint address="" name="RoomSubjectEndPoint" binding="basicHttpBinding" bindingConfiguration="webHttpsConfig" contract="University.BackEnd.Services.Contracts.IRoomSubject" />
      </service>
      <service name="University.BackEnd.Services.Services.SubjectServices" behaviorConfiguration="BusinessService">
        <endpoint address="" name="SubjectEndPoint" binding="basicHttpBinding" bindingConfiguration="webHttpsConfig" contract="University.BackEnd.Services.Contracts.ISubject" />
      </service>
      <service name="University.BackEnd.Services.Services.NotesServices" behaviorConfiguration="BusinessService">
        <endpoint address="" name="NotesEndPoint" binding="basicHttpBinding" bindingConfiguration="webHttpsConfig" contract="University.BackEnd.Services.Contracts.INotes" />
      </service>
    </services>
    <bindings>
      <basicHttpBinding>
        <binding name="webHttpsConfig" maxBufferPoolSize="2147483647" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00">
          <readerQuotas maxDepth="10487760" maxStringContentLength="10487760" maxArrayLength="10487760" maxBytesPerRead="10487760" maxNameTableCharCount="10487760" />
        </binding>
      </basicHttpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="BusinessService">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true">
      <serviceActivations>
        <add relativeAddress="./City.svc" service="University.BackEnd.Services.Services.CityServices" />
        <add relativeAddress="./Country.svc" service="University.BackEnd.Services.Services.CountryServices" />
        <add relativeAddress="./GeographicalState.svc" service="University.BackEnd.Services.Services.GeographicalStateServices" />
        <add relativeAddress="./Person.svc" service="University.BackEnd.Services.Services.PersonServices" />
        <add relativeAddress="./PersonType.svc" service="University.BackEnd.Services.Services.PersonTypeServices" />
        <add relativeAddress="./Program.svc" service="University.BackEnd.Services.Services.ProgramServices" />
        <add relativeAddress="./ProgramSubject.svc" service="University.BackEnd.Services.Services.ProgramSubjectServices" />
        <add relativeAddress="./ProgramSubjectPerson.svc" service="University.BackEnd.Services.Services.ProgramSubjectPersonServices" />
        <add relativeAddress="./Room.svc" service="University.BackEnd.Services.Services.RoomServices" />
        <add relativeAddress="./RoomSubject.svc" service="University.BackEnd.Services.Services.RoomSubjectServices" />
        <add relativeAddress="./Subject.svc" service="University.BackEnd.Services.Services.SubjectServices" />
        <add relativeAddress="./Notes.svc" service="University.BackEnd.Services.Services.NotesServices" />
      </serviceActivations>
    </serviceHostingEnvironment>
  </system.serviceModel>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=2.0.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:default /nowarn:1659;1699;1701" />
      <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=2.0.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:default /nowarn:41008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+" />
    </compilers>
  </system.codedom>
</configuration>
<!--ProjectGuid: C05E3B41-572B-4947-9413-A573F40D167F-->